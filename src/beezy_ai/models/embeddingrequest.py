"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
from beezy_ai.types import BaseModel
from enum import Enum
import pydantic
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class EncodingFormat(str, Enum):
    r"""The format of the output data.

    """
    FLOAT = "float"


class EmbeddingRequestTypedDict(TypedDict):
    model: NotRequired[str]
    r"""The ID of the model to use for this request.

    """
    inputs: NotRequired[List[str]]
    r"""The list of strings to embed.

    """
    encoding_format: NotRequired[EncodingFormat]
    r"""The format of the output data.

    """
    

class EmbeddingRequest(BaseModel):
    model: Optional[str] = None
    r"""The ID of the model to use for this request.

    """
    inputs: Annotated[Optional[List[str]], pydantic.Field(alias="input")] = None
    r"""The list of strings to embed.

    """
    encoding_format: Optional[EncodingFormat] = None
    r"""The format of the output data.

    """
    
